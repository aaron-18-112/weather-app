Created a gradle wrapper which allows my program to be run by multiple machines
Implemented git, both through terminal and GitHub Desktop
Built a jar file up so my application is precompiled and will run smooth and quick
Configured a build.gradle.kts file to ensure everything is being compiled
Tried to keep the main class as clean as possible
Built out methods where possible in order to maintain structure and minimise code reuse
Have managed to keep the weather data separate in order to implement CSV functionality or build the data out

TODO
Implement a world forecast, pulls the daily forecast from each instance together - Inheritance
Potentially some weather graphics (ASCI)
Write Tests - JUnit
Create a README.md

Potential:
Polymorphism: Depending on the type of weather data you need to handle (e.g., temperature, precipitation, wind, etc.),
you can create different subclasses of the Weather class that override the common methods to provide specialized functionality.
This will allow you to easily add new types of weather data without modifying the existing code.
